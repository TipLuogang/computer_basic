1. 知识概要与学习计划
      a                                      b
    应用层                                应用层
    传输层              路由器             传输层
    网络层              网络层              网络层
    网络接口层          网络接口层          网络接口层  

    编程的时候很多时候都是对接传输层，路由器没有传输层在工作
    传输层提供进程与进程之间的逻辑通信（网络层提供的是主机之间的逻辑通信）
    传输层对收到的报文进行差错检测（对网络层的数据部分检测）
    管理端到端的通信连接

    a（打开浏览器）--虚拟的互连网络--b（网站后台）：进程与进程的通信（单机：unix域套接字，共享内存； 跨设备机器：网络通信）
    使用端口来标记不同的进程，端口使用16比特位表示（0~65535）
        FTP(21), HTTP(80), HTTPS(443), DNS(53), TELNET(23)
    协议：
        TCP：TCP协议详解、TCP协议可靠传输、TCP协议流量控制、TCP协议拥塞控制、三次握手和四次释放
        UDP：UDP协议详解
    
    传输层的寻址与端口：传输层从网络层收到数据后交付指明的应用进程 - 端口
        端口是传输层的SAP（服务访问点），标识主机中的应用进程
        逻辑端口/软件端口，端口号只有本地意义
        端口号长度位16bit，能表示65536个不同的端口号
        端口号范围：
            服务端使用的端口号：
                熟识端口号：0~1023，给TCP/IP最重要的一些应用程序，让所有用户知道，非常重要的程序才会固定确定号端口号
                    FTP(21), TELNET(23), DNS(53), HTTP(80), HTTPS(443), 
                登记端口号：1024~49151，稍微没那么重要的应用程序使用的

            客户端使用的端口号：
                49152~65535，仅在客户进程运行时才动态选择
        套接字socket=（主机IP地址，端口号），套接字可以唯一标识网络中的一个主机以及它上面的一个进程，即：套接字用来标识端点

2. UDP协议详解
    用户数据报协议（UDP，User Datagram Protocol），是一个非常简单的协议
    UDP只在IP数据报服务之上增加了很少功能，即复用分用和差错检测功能
    数据报（Datagram）：应用层传输过来的一个完整的数据
    UDP不会对数据报进行任何的处理（不合并，不拆分），直接把数据封装到协议里面，然后传输出去
    UDP协议的长度主要由应用层传递的数据长度决定


    数据链路层：
        帧首部  帧的数据(IP数据报)    帧尾部

    网络层（帧的数据-IP数据报）：
        IP首部  IP数据报的数据

    传输层（IP数据报的数据）：
        UDP首部 UDP数据报的数据(应用层数据，即Datagram)
    格式：
        16位源端口号         16位目的端口号
        16位UDP长度         16位UDP校验和
                    UDP数据
    
    特点：
    UDP是无连接协议，不需要提前建立连接
    UDP不能保证可靠的交付数据
        想发就发，无法保证数据在网络中是否丢失，即使丢失了也无法感知
    UDP是面向报文（数据报）传输的，适合一次性传输少量数据的网络应用
    UDP没有拥塞控制（不管网络是否拥塞，都会把数据交付出去），适合很多实时应用
    UDP首部开销小，8B
    比如：微信发消息，视频会议
    
3. TCP协议详解   
    传输控制协议（TCP，Transmission Control Protocol），是计算机网络中非常复杂的一个协议
    特点：
    TCP是面向连接的协议
    TCP的一个连接有两端（点对点通信）
    TCP提供可靠的传输服务
    TCP协议提供全双工的通信（双方可以同时在连接里面通话，两端可以同时往连接里面发送数据或者接收数据）
        连接的两端都会有：
            发送缓存：准备发送的数据&已发送但尚未收到确认的数据
            接收缓存：按序到达但尚未被接收应用程序读取的数据&不按序到达的数据          
    TCP是面向字节流的协议（UDP是面向数据报的，这里的流指的是流入、流出进程的字节序列）
        业务层传来的是一块一块完整的数据，TCP不把它看成一块完整的数据，而是看成一系列的，一整串的字节流
        TCP不是面向一整块数据进行处理的，而是面向一个字节一个字节处理的
        因此TCP可能取出数据里面的某一段来进行传输，剩下的数据放到下一个TCP报文来进行传输
        TCP中可能对用户的数据块进行合并、分拆
    比如：微信发送大文件    

     传输层（IP数据报的数据）：
        TCP首部  TCP数据报的数据
    格式：
    1.    16位源端口号                 16位目的端口号
    2.                     序号
    3.                     确认号
    4.    数据偏移 保留字段 TCP标记       窗口
    5.    校验和                       紧急指针
    6.    TCP选项（可选）                        填充

    1~5  固定有20个字节
    2.序号：占有32个比特位，0~2^32-1, TCP是面向字节流的，每一个字节都有一个唯一的序号，这里的序号代表：TCP数据报的数据首字节的序号
    3.确认号：有32个比特位，0~2^32-1, TCP是面向字节流的，每一个字节都有一个唯一的序号，这里的序号代表：期望收到下一个数据报数据的首字节序号
        确认号为N：则表示N-1序号的数据都已收到
    4.数据偏移：占4位，0~15，单位为：32位字，即：每一个偏移都可以表示4个字节的偏移，表示数据偏离首部的距离（原因：TCP选项内容有多少不确定）
      TCP标记：占6位，每位有不同含义：
            URG：Urgent紧急位，为1，表示紧急数据，配合紧急指针使用（发送方的紧急处理）
            ACK：Acknowledgement确认位，为1，确认号生效，为0的时候确认号是没有意义的
            PSH：Push推送位，为1，尽快地把数据交付给应用层（接收方的紧急处理）
            RST：Reset重置位，为1，重新建立连接
            SYN：Synchronizztion同步位，为1，表示连接请求报文/连接接受报文
            FIN：Finish终止位，为1，表示释放连接
      窗口：占16位，0~2^16-1, 窗口指明对方可以发送的数据量有多少 
            如果窗口值是1000，则表示对方可以发送1000字节给我
            如果确认号是501，窗口是1000，那么从501~1500这么多个字节的数据都是可以接收的
    5.紧急指针：URG=1时启用，指定紧急数据在报文的位置
    6.TCP选项：最多40个字节（可根据数据偏移占4位推算而来：15*4=60，60-20=40）
        支持未来发展

4. 可靠传输的基本原理
    停止等待协议
        见图（无差错情况），对于发送方和接收方都是停止等待、停止等待的过程
        出差错情况：
            发送的消息在路上丢失了
            确认的消息在路上丢失了
            确认的消息很久才到
        通过超时重传来保证可靠传输
        每发送一个消息都需要设置一个定时器（超时定时器），以计算什么时候这个消息过期了  （TCP协议中有4个定时器需要学习）
        停止等待协议是最简单的可靠传输协议
        对信道的利用率不高

    连续ARQ协议
        在停止等待协议基础上进行改造的
        自动重传请求（Automatic Repeat-reQuest，ARQ）：基于：既然单个发送和确认效率低，可不可以批量发送和确认
        窗口里面的数据都可以发送，只要发送的数据确认号已经到达了，就把窗口往前推动从而形成可以滑动的窗口
        对于滑动窗口并不需要对每一个报文都确认，而是采用累计确认的方法
            只要接收方收到某个消息的确认，就表示说这个消息之前的所有消息都已经收到，大大减少了确认报文的数量，提升网络的效率
        精髓：滑动窗口，累计确认，后面的TCP协议的可靠传输也是基于连续ARQ协议来开发的
    
5.TCP协议的可靠传输
    TCP的可靠传输基于连续ARQ协议
    TCP的滑动窗口以字节为单位   

    传输23~29号字节，25，27已收到确认号，23，14没有收到，则从23开始重传
    更好的方式：选择重传，选择某些消息重传，而不是把所有消息重新传输
        选择重传需要指定需要重传的字节
        每一个字节都有唯一的32位序号
        数据存储在TCP选项里面，TCP选项最多有40个字节，也就是说最多能存储10个序号，指定的是边界

5.TCP连接管理
    TCP传输的三个阶段
         连接建立 --》数据传送--》连接释放 
    TCP连接的建立采用客户服务器方式，主动发起连接建立的应用程序叫做客户，而被动等待连接建立的应用程序叫服务器
    连接建立：（三次握手）
        见图：TCP连接的建立.png
    连接释放：（四次挥手）
        见图：TCP连接释放.png






